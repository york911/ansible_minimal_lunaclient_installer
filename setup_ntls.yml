# This script is used to setup NTLs Connection to 1 or multiple HSMs.
---
- hosts: all
  vars:
    MIN_CLIENT_DIR: $HOME/LunaClient-Minimal-10.7.2-16.x86_64
    hsm_ips:
      - 76.239.141.209
      - 76.239.141.216
    client_name: jv_boa
    partition_name:
      - jv_boa
      - jv_boa
    ssh_hsm_user: jvaldes
    ssh_password: "Gemalto123!"
    co_challenge: "Thales123"
  tasks:
    # Pre-checks to ensure Luna Client would connect to HSMs servers
    # NOTE: This script will launch lunacm and run ccfg per Minimal Luna client.

    # 1. Run lunacm with clientconfig to deploy the HSM and partition registration
    # ./bin/64/lunacm -q clientconfig deploy -server 76.239.141.209 -client jv_boa -partition jv1 -user jvaldes -password "Gemalto123!" -v

    - name: Run Lunacm for Partition registration
      command: ./bin/64/lunacm -q clientconfig deploy -server {{ item }} -client {{ client_name }} -partition {{ partition_name }} -user {{ ssh_hsm_user }} -password {{ ssh_password }} -f -v
      args:
        chdir: "{{ MIN_CLIENT_DIR }}"
      loop: "{{ hsm_ips}}"
      register: lunacm_deploy_result
      when: ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat'

    # 2. Create the HA cluster on each client.
    - name: Create HA Cluster for slot 0
      tags: cluster
      command: ./bin/64/lunacm -q ha createGroup -slot 0 -label {{ client_name }}_ha -password {{ co_challenge }}
      args:
        chdir: "{{ MIN_CLIENT_DIR }}"
      register: lunacm_cluster_result
      when: ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat'

    - name: Display command result of the cluster
      tags: cluster
      debug:
        msg: "{{ lunacm_cluster_result.stdout }}"
# 3. Add members to the cluster
