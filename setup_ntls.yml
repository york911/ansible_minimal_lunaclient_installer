# This script is used to setup NTLs Connection to 1 or multiple HSMs.
# Prerequisites:
# 1. Partition already created on each HSM
# 2. Partition already initialized and autoactivated Policy 22 and 23 activated
# 3. All partitions on an HA should share the same Cloning Domain (Red PED Key)
# 4. All partitions on an HA should share the same CO Challenge password
---
- hosts: all
  vars:
    MIN_CLIENT_DIR: $HOME/LunaClient-Minimal-10.7.2-16.x86_64
    hsm_info:
      - ip: 127.0.0.1
        partition_name: partition_name1
        serial_number: 1234
      - ip: 127.0.0.2
        partition_name: partition_name2
        serial_number: 4321

    primary_hsm: "{{ hsm_info | first }}"
    secondary_hsms: "{{ hsm_info[1:] }}"

    client_name: client_name
    ssh_hsm_user: hsm_user
    ssh_password: "pw"
    co_challenge: "pw"

  tasks:
    # Pre-checks to ensure Luna Client would connect to HSMs servers
    # NOTE: This script will launch lunacm and run ccfg per Minimal Luna client.

    # 1. Run lunacm with clientconfig to deploy the HSM and partition registration
    - name: Run Lunacm for Partition registration
      command: ./bin/64/lunacm -q clientconfig deploy -server {{ item.ip }} -client {{ client_name }} -partition {{ item.partition_name }} -user {{ ssh_hsm_user }} -password {{ ssh_password }} -f
      args:
        chdir: "{{ MIN_CLIENT_DIR }}"
      loop: "{{ hsm_info }}"
      register: lunacm_deploy_result
      when: ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat'

    # 2. Create the HA cluster using only the primary HSM serial_number
    - name: Create HA Cluster using primary HSM
      tags: cluster
      command: ./bin/64/lunacm -q ha createGroup -serialNumber {{ primary_hsm.serial_number }} -label {{ client_name }}_ha -password {{ co_challenge }}
      args:
        chdir: "{{ MIN_CLIENT_DIR }}"
      register: lunacm_cluster_result
      when: ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat'

    # 3. Add members to the cluster
    - name: Add partitions members to the HA cluster
      tags: members
      command: ./bin/64/lunacm -q ha addMember -serialNumber {{ item.serial_number }} -group {{ client_name }}_ha -password {{ co_challenge }}
      args:
        chdir: "{{ MIN_CLIENT_DIR }}"
      loop: "{{ secondary_hsms }}"
      register: lunacm_member_result
      when: ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat'

    # 4. Enable HA Only
    - name: Enable HA Only
      tags: HAOnly
      command: ./bin/64/lunacm -q ha HAOnly -enable
      args:
        chdir: "{{ MIN_CLIENT_DIR }}"
      when: ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat'
